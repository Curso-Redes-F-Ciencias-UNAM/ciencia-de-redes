import networkx as nx
import numpy as np
import matplotlib.pyplot as plt
from itertools import permutations



m0 = 3 #tamano de la semilla
m = 1 #numero de enlaces que tiene cada nuevo nodo
G = nx.Graph()

for i in range(m0):
    G.add_node(i)
G.add_edges_from(list(permutations(list(G),2))) #se hace una red completa de tamano m0

plt.figure(figsize = [3,3])
nx.draw(G)

grados = np.array(list(G.degree(nodo) for nodo in G))
probabilidades = grados / sum(grados)
nodos = np.random.choice(list(G), size = m, p = probabilidades, replace = False)
i = len(G)
G.add_node(i)
for j in nodos:
    G.add_edge(i, j)

color = ['b' for i in G]
color[-1] = 'r'
tamanio = np.array(list(G.degree(nodo) for nodo in G))
tamanio = tamanio/tamanio.sum()
plt.figure(figsize = [3,3])
nx.draw_kamada_kawai(G, node_color = color, node_size = 250*tamanio+50, edgecolors='black')

for i in range(len(G),10000): #para 100000 ya tarda un rato
    grados = np.array(list(dict(G.degree).values()))
    probabilidades = grados / sum(grados)
    nodos = np.random.choice(list(G), size = m, p = probabilidades, replace = False)
    G.add_node(i)
    for j in nodos:
        G.add_edge(i, j)

grados = list(dict(G.degree).values())

y, x = np.histogram(grados, bins = max(grados))
x_med = (x[:-1] + x[1:])*.5

plt.plot(x_med, y, 'o-')
plt.plot()

y, x = np.histogram(grados, bins = max(grados))
x_med = (x[:-1] + x[1:])*.5

plt.plot(x_med, y, 'o')
plt.plot(x_med, 30000*x_med**(-3.), '-')
plt.yscale('log')
plt.xscale('log')
plt.plot()

max_log = np.log10(max(grados))
log_bin = np.logspace(0, max_log, 20)

y, x = np.histogram(grados, bins = log_bin, density = True)
x_med = (x[:-1] + x[1:])*.5

plt.plot(x_med, y, 'o')
plt.plot(x_med, 20*x_med**(-3.), '-')

plt.yscale('log')
plt.xscale('log')
plt.plot()


